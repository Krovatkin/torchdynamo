import argparse
import csv

"""
Script that parses ops used in benchmarks
    (tracked via OpTracker: https://github.com/pytorch/pytorch/pull/85641)
    generated by `python benchmarks/torchbench.py --accuracy --backend aot_eager --training --device cuda

    usage: 
    python benchmarks/parse_ops.py accuracy_aot_eager_ops.csv accuracy_aot_eager_ops_.csv

    input should be csv with [model, (ops+counts)]
    output should be csv with [op, models, count]
"""


def parse_ops(in_file, out_file):
    models_using_op = {}
    with open(in_file, "r") as f:
        rows = list(csv.reader(f))
        assert rows[0] == ["dev", "name", "batch_size", "ops"], f"bad header, {rows[0]}"
        for _, name, _, ops in rows[1:]:
            for op, count in eval(ops):
                assert isinstance(count, int)
                if op not in models_using_op:
                    models_using_op[op] = {}
                if name not in models_using_op[op]:
                    models_using_op[op][name] = 0
                models_using_op[op][name] += count

    with open(out_file, "w") as f:
        writer = csv.writer(f)
        writer.writerow(["op", "models", "count"])
        writer.writerows(
            [
                [
                    op,
                    list(models_using_op[op].keys()),
                    sum([models_using_op[op][name] for name in models_using_op[op]]),
                ]
                for op in models_using_op
            ]
        )


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("in_file")
    parser.add_argument("out_file")
    args = parser.parse_args()

    parse_ops(args.in_file, args.out_file)
